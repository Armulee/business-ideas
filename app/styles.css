

.button {
   @apply glassmorphism bg-transparent hover:bg-blue-600 text-white font-medium p-4 rounded-full shadow-lg hover:shadow-xl transition-all duration-500 hover:text-white
}

.cta-button {
    @apply bg-gradient-to-r from-blue-500 to-blue-600 hover:from-blue-600 hover:to-blue-700 text-white font-medium px-8 py-6 rounded-full shadow-lg hover:shadow-xl transition-all duration-500
}

.input {
    @apply appearance-none glassmorphism bg-transparent focus:bg-blue-600/50 transition duration-500 placeholder:text-white/60 text-white hover:text-white
}

.select {
    @apply text-white/80 glassmorphism bg-transparent transition duration-500 data-[state=open]:bg-blue-600/50 hover:text-white hover:bg-blue-600
}

.description ol {
    list-style-type: decimal;
    padding-left: 20px;
}

.description ul {
    list-style-type: disc;
    padding-left: 20px;
}

.description p {
    width: 100%;
    /* Or a fixed width like 300px */
    word-wrap: break-word;
    overflow-wrap: break-word;
}


/* .description ul {
    list-style-type: decimal;
    padding-left: 30px;
} */

.fade-animation {
    animation: fadeInOut 6s ease-in-out infinite;
}

.swiper-wrapper {
    -webkit-transition-timing-function: linear !important;
    -o-transition-timing-function: linear !important;
    transition-timing-function: linear !important;
}

.swiper-slide {
    display: flex;
    align-items: center;
    justify-content: center;
    height: 100%;
    /* Ensure slides fill the container height */
    max-height: 300px;
    /* Set the max height of the slides */
    overflow: hidden;
    /* Prevent the slide content from overflowing */
}

/* Handle overflow for text or paragraphs inside the slides */
.swiper-slide .content {
    height: 100%;
    overflow: hidden;
    display: -webkit-box;
    -webkit-line-clamp: 3;
    /* Limit to 3 lines */
    -webkit-box-orient: vertical;
    text-overflow: ellipsis;
}

.swiper-scrollbar {
    background: #0000003a !important;
}

.swiper-scrollbar-drag {
    background: white !important;
}

.ql-container {
    background: transparent !important;
    /* Change text color */
    font-size: 14px;
    color: white !important;
    /* Adjust font size */
    border: none !important;
    /* Remove border */
}

.ql-toolbar {
    position: sticky;
    top: 0;
    z-index: 1000;
    border-radius: 3px;
    background: rgb(230, 235, 249) !important;
    /* Semi-transparent toolbar */
    border: none !important;
}

.ql-editor {
    min-height: 150px;
    padding: 10px;
    font-size: 14px;
    /* Ensure text is visible */
}

/* Customize buttons/icons */
.ql-toolbar button {
    color: white !important;
}

.ql-toolbar button:hover {
    background: rgba(255, 255, 255, 0.2) !important;
}

/* .glassmorphism {
    @apply bg-neutral-200 rounded-md bg-clip-padding backdrop-filter backdrop-blur-sm bg-opacity-20 
} */

.glassmorphism {
    @apply bg-gradient-to-br from-white/10 to-white/5 backdrop-blur-sm border border-white/10 rounded-xl shadow-lg
}

.gradient-section {
    @apply bg-gradient-to-b from-blue-500 to-blue-700 pb-8 text-white
}

.reverse-gradient-section {
    @apply bg-gradient-to-b from-blue-700 to-blue-500 pb-8 text-white
}

/* Animation for the blob background */
@keyframes blob {
    0% {
        transform: translate(0px, 0px) scale(1);
    }

    33% {
        transform: translate(30px, -50px) scale(1.1);
    }

    66% {
        transform: translate(-20px, 20px) scale(0.9);
    }

    100% {
        transform: translate(0px, 0px) scale(1);
    }
}

.animate-blob {
    animation: blob 7s infinite;
}

.animation-delay-2000 {
    animation-delay: 2s;
}

.animation-delay-4000 {
    animation-delay: 4s;
}

@keyframes gradientMove {
    0% {
        background-position: 0% 50%;
    }

    50% {
        background-position: 100% 50%;
    }

    100% {
        background-position: 0% 50%;
    }
}

.moving-gradient {
    background: linear-gradient(
        /* #1E40AF, #1E3A8A, #3B82F6*/
        90deg,
        #1E40AF,
        /* Darkest Blue */
        #2a3f6f
        /* Medium Blue */
    );
    background-size: 300% 300%;
    animation: gradientMove 20s ease infinite;
    /* filter: blur(20px); */
}

@keyframes moveInCircle {
    0% {
        transform: rotate(0deg);
    }

    50% {
        transform: rotate(180deg);
    }

    100% {
        transform: rotate(360deg);
    }
}

@keyframes moveVertical {
    0% {
        transform: translateY(-50%);
    }

    50% {
        transform: translateY(50%);
    }

    100% {
        transform: translateY(-50%);
    }
}

@keyframes moveHorizontal {
    0% {
        transform: translateX(-50%) translateY(-10%);
    }

    50% {
        transform: translateX(50%) translateY(50%);
    }

    100% {
        transform: translateX(-50%) translateY(-50%);
    }
}

@keyframes fadeInOut {
    0% {
        opacity: 0;
    }

    15% {
        opacity: 1;
    }

    75% {
        opacity: 1;
    }

    100% {
        opacity: 0;
    }
}

/* Server component animations */
@keyframes fadeInUp {
    0% {
        opacity: 0;
        transform: translateY(20px);
    }
    100% {
        opacity: 1;
        transform: translateY(0);
    }
}

@keyframes fadeInLeft {
    0% {
        opacity: 0;
        transform: translateX(-50px);
    }
    100% {
        opacity: 1;
        transform: translateX(0);
    }
}

@keyframes fadeInRight {
    0% {
        opacity: 0;
        transform: translateX(50px);
    }
    100% {
        opacity: 1;
        transform: translateY(0);
    }
}

@keyframes scaleIn {
    0% {
        opacity: 0;
        transform: scale(0.9);
    }
    100% {
        opacity: 1;
        transform: scale(1);
    }
}

@keyframes staggerFadeIn {
    0% {
        opacity: 0;
        transform: translateY(20px);
    }
    100% {
        opacity: 1;
        transform: translateY(0);
    }
}

/* Animation classes for server components */
.animate-fade-in-up {
    animation: fadeInUp 0.6s ease-out forwards;
}

.animate-fade-in-left {
    animation: fadeInLeft 0.6s ease-out forwards;
}

.animate-fade-in-right {
    animation: fadeInRight 0.6s ease-out forwards;
}

.animate-scale-in {
    animation: scaleIn 0.5s ease-out forwards;
}

.animate-stagger-fade-in {
    animation: staggerFadeIn 0.5s ease-out forwards;
}

/* Stagger delays for grid items */
.stagger-1 { animation-delay: 0.1s; }
.stagger-2 { animation-delay: 0.2s; }
.stagger-3 { animation-delay: 0.3s; }
.stagger-4 { animation-delay: 0.4s; }
.stagger-5 { animation-delay: 0.5s; }
.stagger-6 { animation-delay: 0.6s; }

/* Animation delay utilities */
.animate-delay-500 { animation-delay: 0.5s; }
.animate-delay-800 { animation-delay: 0.8s; }

/* Viewport animations */
.animate-on-viewport {
    opacity: 0;
    transform: translateY(20px);
    transition: all 0.6s ease-out;
}

.animate-on-viewport.animate {
    opacity: 1;
    transform: translateY(0);
}

/* Scroll-triggered animations */
.scroll-animate {
    opacity: 0;
    transform: translateY(30px);
    transition: all 0.8s cubic-bezier(0.4, 0, 0.2, 1);
}

.scroll-animate.animate {
    opacity: 1;
    transform: translateY(0);
}

/* Different animation directions */
.scroll-animate-left {
    opacity: 0;
    transform: translateX(-50px);
    transition: all 0.8s cubic-bezier(0.4, 0, 0.2, 1);
}

.scroll-animate-left.animate {
    opacity: 1;
    transform: translateX(0);
}

.scroll-animate-right {
    opacity: 0;
    transform: translateX(50px);
    transition: all 0.8s cubic-bezier(0.4, 0, 0.2, 1);
}

.scroll-animate-right.animate {
    opacity: 1;
    transform: translateX(0);
}

.scroll-animate-scale {
    opacity: 0;
    transform: scale(0.9);
    transition: all 0.6s cubic-bezier(0.4, 0, 0.2, 1);
}

.scroll-animate-scale.animate {
    opacity: 1;
    transform: scale(1);
}

/* Stagger animations for grid items */
.scroll-stagger {
    opacity: 0;
    transform: translateY(30px);
    transition: all 0.6s cubic-bezier(0.4, 0, 0.2, 1);
}

.scroll-stagger.animate {
    opacity: 1;
    transform: translateY(0);
}

/* Stagger delays */
.scroll-stagger-delay-1 { transition-delay: 0.1s; }
.scroll-stagger-delay-2 { transition-delay: 0.2s; }
.scroll-stagger-delay-3 { transition-delay: 0.3s; }
.scroll-stagger-delay-4 { transition-delay: 0.4s; }
.scroll-stagger-delay-5 { transition-delay: 0.5s; }
.scroll-stagger-delay-6 { transition-delay: 0.6s; }

/* Partner page specific styles */
.partner-hero {
    background: linear-gradient(135deg, #d2d2d2 0%, #147feb 100%);
}

.partner-section {
    background: linear-gradient(135deg, #c9c8c8 0%, #2881da 100%);
}



/* Wipe effect animations */
@keyframes wipeInLeft {
    0% {
        clip-path: inset(0 100% 0 0);
        transform: translateX(-20px);
        opacity: 0;
    }
    100% {
        clip-path: inset(0 0% 0 0);
        transform: translateX(0);
        opacity: 1;
    }
}

@keyframes wipeInRight {
    0% {
        clip-path: inset(0 0% 0 100%);
        transform: translateX(20px);
        opacity: 0;
    }
    100% {
        clip-path: inset(0 0% 0 0%);
        transform: translateX(0);
        opacity: 1;
    }
}

@keyframes wipeInUp {
    0% {
        clip-path: inset(100% 0 0 0);
        transform: translateY(20px);
        opacity: 0;
    }
    100% {
        clip-path: inset(0% 0 0 0);
        transform: translateY(0);
        opacity: 1;
    }
}

/* Wipe effect classes */
.wipe-in-left {
    animation: wipeInLeft 1.2s cubic-bezier(0.4, 0, 0.2, 1) forwards;
}

.wipe-in-right {
    animation: wipeInRight 1.2s cubic-bezier(0.4, 0, 0.2, 1) forwards;
}

.wipe-in-up {
    animation: wipeInUp 1.2s cubic-bezier(0.4, 0, 0.2, 1) forwards;
}

/* Box expansion from left */
@keyframes expandFromLeft {
    0% {
        clip-path: inset(0 100% 0 0);
        transform: translateX(-20px);
        opacity: 0;
    }
    50% {
        clip-path: inset(0 0% 0 0);
        transform: translateX(0);
        opacity: 0.8;
    }
    100% {
        clip-path: inset(0 0% 0 0);
        transform: translateX(0);
        opacity: 1;
    }
}

.expand-from-left {
    animation: expandFromLeft 1.5s cubic-bezier(0.4, 0, 0.2, 1) forwards;
}

/* Sparkle animations */
@keyframes sparkle {
    0%, 100% {
        transform: scale(1);
        opacity: 1;
    }
    25% {
        transform: scale(1.1);
        opacity: 0.9;
    }
    50% {
        transform: scale(0.9);
        opacity: 1;
    }
    75% {
        transform: scale(1.05);
        opacity: 0.95;
    }
}

@keyframes sparkleShine {
    0%, 100% {
        filter: drop-shadow(0 0 5px rgba(255, 255, 255, 0.3)) drop-shadow(0 0 10px rgba(255, 255, 255, 0.2));
    }
    25% {
        filter: drop-shadow(0 0 8px rgba(255, 255, 255, 0.5)) drop-shadow(0 0 15px rgba(255, 255, 255, 0.4)) drop-shadow(0 0 20px rgba(255, 255, 255, 0.3));
    }
    50% {
        filter: drop-shadow(0 0 12px rgba(255, 255, 255, 0.7)) drop-shadow(0 0 20px rgba(255, 255, 255, 0.6)) drop-shadow(0 0 30px rgba(255, 255, 255, 0.5));
    }
    75% {
        filter: drop-shadow(0 0 8px rgba(255, 255, 255, 0.5)) drop-shadow(0 0 15px rgba(255, 255, 255, 0.4)) drop-shadow(0 0 20px rgba(255, 255, 255, 0.3));
    }
}

@keyframes sparkleGlow {
    0%, 100% {
        filter: drop-shadow(0 0 5px rgba(59, 130, 246, 0.5));
    }
    50% {
        filter: drop-shadow(0 0 20px rgba(59, 130, 246, 0.8)) drop-shadow(0 0 30px rgba(59, 130, 246, 0.6));
    }
}

@keyframes sparklePulse {
    0%, 100% {
        transform: scale(1);
    }
    50% {
        transform: scale(1.3);
    }
}

/* Sparkle effect classes */
.sparkle-animate {
    animation: sparkle 2s ease-in-out infinite, sparkleShine 2s ease-in-out infinite;
}

.sparkle-pulse {
    animation: sparklePulse 1.5s ease-in-out infinite;
}

/* Text reveal with wipe effect */
.text-reveal-container {
    position: relative;
    overflow: hidden;
}

.text-reveal-text {
    opacity: 0;
    animation: wipeInUp 1.5s cubic-bezier(0.4, 0, 0.2, 1) 0.5s forwards;
}

.tiptap p {
    margin-bottom: 0.75rem;
}

.tiptap p:last-child {
    margin-bottom: 0;
}

.tiptap p.is-editor-empty:first-child::before {
    color: rgba(255, 255, 255, 0.5);
    content: attr(data-placeholder);
    float: left;
    height: 0;
    pointer-events: none; }

.tiptap ul {
    list-style: disc;
    padding-left: 20px;
}

.tiptap ol {
    list-style: decimal;
    padding-left: 20px;
}

.tiptap a {
    color: rgb(178, 201, 245);
    text-decoration: underline;
}

.tiptap q {
    quotes: '"' '"' "'" "'" !important;
    font-style: italic !important;
    color: #60a5fa !important;
    display: inline !important;
}

.tiptap q:before {
    content: open-quote !important;
    color: #60a5fa !important;
}

.tiptap q:after {
    content: close-quote !important;
    color: #60a5fa !important;
}

.ProseMirror-focused {
    outline: none;
}